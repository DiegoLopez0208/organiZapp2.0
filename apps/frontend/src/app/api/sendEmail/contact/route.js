"use strict";
import { NextResponse } from "next/server";
import nodemailer from "nodemailer";
import { Resend } from "resend";

export async function POST(request) {
  try {
    const { name, email, subject, message } = await request.json();

    const htmlTemplate = (toName, toEmail) => `
      <div style="background-color: #f5f5f5; padding: 20px;">
        <div style="max-width: 600px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0px 0px 10px rgba(0,0,0,0.2);">
            <h1 >Details of Mail</h1>
            <table>
                <tr><td><strong>Name: ${name}</strong></td></tr>
                <tr><td><strong>Subject: ${subject}</strong></td></tr>
                <tr><td><strong>Email: ${email}</strong></td></tr>
            </table>
            <hr style=" border-color: #18A14F; border-width: 1px; margin: 20px 0;">
            <h2>Message:${message}</h2>
        </div>
        <p style="padding:10px;">
          <strong>Mail generated by:</strong> ${toEmail}
        </p>
      </div>
    `;

    if (process.env.NODE_ENV === "development") {

      const testAccount = await nodemailer.createTestAccount();
      const transporter = nodemailer.createTransport({
        host: testAccount.smtp.host,
        port: testAccount.smtp.port,
        secure: testAccount.smtp.secure,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass,
        },
      });

      await transporter.sendMail({
        from: testAccount.user,
        to: testAccount.user,
        subject: `Email sent by: ${name}`,
        html: htmlTemplate(name, testAccount.user),
      });

      await transporter.sendMail({
        from: testAccount.user,
        to: email,
        subject: `This is your information from the email you sent: ${name}`,
        html: htmlTemplate(name, testAccount.user),
      });

      return NextResponse.json({
        message: "Correo enviado en desarrollo (Ethereal)",
      });
    } else {

      const resend = new Resend(process.env.RESEND_API_KEY);
      const from = process.env.RESEND_FROM;

      await resend.emails.send({
        from,
        to: [from],
        subject: `Email sent by: ${name}`,
        html: htmlTemplate(name, from),
      });

      await resend.emails.send({
        from,
        to: [email],
        subject: `This is your information from the email you sent: ${name}`,
        html: htmlTemplate(name, from),
      });

      return NextResponse.json({ message: "Correo enviado (Resend)" });
    }
  } catch (error) {
    console.error("‚ùå Error:", error);
    return NextResponse.json(
      { message: "Failed to Send Email" },
      { status: 500 },
    );
  }
}
